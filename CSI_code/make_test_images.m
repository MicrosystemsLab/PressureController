% make_test_images
% MAKE_TEST_IMAGES A script for creating test images for the CSI scripts
%   (Cell Strain from Images)
%
% This MATLAB script creates a series of images for testing the CSI
%  scripts with new images. This script creats a series of test images by
%  distorting an image by a known amount to simulate strain. Running the
%  CSI scripts on the series of test images generated by this script should
%  give the expected strain result.
%
% To use this script, make sure the CSI directory is on the MATLAB path or
%  place it in the directory with the microscope image for testing. Change
%  the value of the variable "startFile" in this script to the filename of
%  the image for testing. Then define the amount of strain that should be
%  simulated in each image, and the number of images to create. 3-5 images
%  are usually sufficient. Use more test images for large or complex cell
%  images. Enter "make_test_images" at the MATLAB command line to run this
%  script and create test images. Then run the CSI scripts on these test
%  images and verify that the strain output matches the values entered
%  here. If the strains do not match within a small uncertainty, you may
%  have to adjust the parameters in the CSI script used for cell boundary
%  identification.
%
% M. Hopcroft, August 2019
%	hopcroft@reddogresearch.com
%

%% Modify these parameters
% A typical microscope file from your measurements
%startFile = 'image_cad512_0.tiff'
startFile = 'image_0_cadherin.tiff'

% Define the simulated strains in percent
%  This percent strain will be simulated at each step
exx = 3;
eyy = 4;

% Number of test images.
numFiles = 3;


%% Create a series of images with known distortion
[fpath,fname,fext] = fileparts(startFile);

fprintf('Make %d Test images with simulated strain of %g%% in X and %g%% in Y at each step\n',...
	numFiles,exx,eyy);

d = imgprocess2(startFile);
dsize = size(d)
if length(dsize)>=3 && dsize(3)>2
	d(:,:,4:end)=[];
	fprintf(1,'WARNING: Images for processing should be grayscale\n');
end
fprintf(1,' Image size %d x %d pixels\n',dsize(1),dsize(2));
figure; imshow(d,'InitialMagnification',100); title(startFile,'Interpreter','none');
drawnow

% define the distortion of each image
Txx = 1+(exx/100);
Tyy = 1+(eyy/100);
T10x = [Txx 0 0; 0 Tyy 0; 0 0 1];
tform = affine2d(T10x);

d10 = d;

%figure
for i=1:numFiles
	d10 = imwarp(d10,tform,'Outputview',imref2d(size(d)));
	dfilename = sprintf('%s_%d%s',fname,i,fext);
	imwrite(d10,dfilename)
	disp(dfilename)
% 	imshow(d10)
% 	pause
end

disp('complete')


%#ok<*NOPTS>
